{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_marginEngineAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "int24",
          "name": "_tickLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_tickUpper",
          "type": "int24"
        }
      ],
      "name": "getPositionMarginRequirement",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "int24",
          "name": "_tickLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_tickUpper",
          "type": "int24"
        }
      ],
      "name": "liquidatePosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/pochanga/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "/home/pochanga/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "2": "contracts/LiquidationBot.sol",
    "3": "interfaces/ILiquidationBot.sol"
  },
  "ast": {
    "absolutePath": "contracts/LiquidationBot.sol",
    "exportedSymbols": {
      "Context": [
        293
      ],
      "ILiquidationBot": [
        271
      ],
      "LiquidationBot": [
        141
      ],
      "Ownable": [
        246
      ]
    },
    "id": 142,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "interfaces/ILiquidationBot.sol",
        "file": "../interfaces/ILiquidationBot.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 142,
        "sourceUnit": 272,
        "src": "58:43:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/pochanga/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 142,
        "sourceUnit": 247,
        "src": "102:80:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "ILiquidationBot",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 271,
              "src": "212:15:2"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "212:15:2"
          },
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 246,
              "src": "229:7:2"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "229:7:2"
          }
        ],
        "canonicalName": "LiquidationBot",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 141,
        "linearizedBaseContracts": [
          141,
          246,
          293,
          271
        ],
        "name": "LiquidationBot",
        "nameLocation": "194:14:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "marginEngineAddress",
            "nameLocation": "259:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 141,
            "src": "243:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "243:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "327:151:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 20,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15,
                          "name": "_marginEngineAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "345:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "377:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 17,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "369:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "369:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "369:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "345:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d617267696e20656e67696e6520616464726573732068617320746f20626520736574",
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "381:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16390fd792f477e73466fcf087c70454416bd23d307edfe5e5309f14e6636aee",
                          "typeString": "literal_string \"margin engine address has to be set\""
                        },
                        "value": "margin engine address has to be set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16390fd792f477e73466fcf087c70454416bd23d307edfe5e5309f14e6636aee",
                          "typeString": "literal_string \"margin engine address has to be set\""
                        }
                      ],
                      "id": 14,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "337:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "337:82:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "337:82:2"
                },
                {
                  "expression": {
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24,
                      "name": "marginEngineAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "429:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25,
                      "name": "_marginEngineAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "451:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "429:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "429:42:2"
                }
              ]
            },
            "id": 29,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "_marginEngineAddress",
                  "nameLocation": "305:20:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "297:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "296:30:2"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "327:0:2"
            },
            "scope": 141,
            "src": "285:193:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              259
            ],
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "630:578:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43,
                          "name": "marginEngineAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "648:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "679:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 45,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "671:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "671:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "671:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "648:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d617267696e20656e67696e6520616464726573732068617320746f20626520736574",
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "683:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16390fd792f477e73466fcf087c70454416bd23d307edfe5e5309f14e6636aee",
                          "typeString": "literal_string \"margin engine address has to be set\""
                        },
                        "value": "margin engine address has to be set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16390fd792f477e73466fcf087c70454416bd23d307edfe5e5309f14e6636aee",
                          "typeString": "literal_string \"margin engine address has to be set\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "640:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "640:81:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "640:81:2"
                },
                {
                  "assignments": [
                    53,
                    55
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "827:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 84,
                      "src": "822:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 52,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "822:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 55,
                      "mutability": "mutable",
                      "name": "returnData",
                      "nameLocation": "849:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 84,
                      "src": "836:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 54,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "836:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6c6971756964617465506f736974696f6e28616464726573732c696e7432342c696e74323429",
                            "id": 60,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "912:40:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_1656503eb2e5c4255df2cae56f5b5477d2e36b02c04051fb09dc2f89dc92a92e",
                              "typeString": "literal_string \"liquidatePosition(address,int24,int24)\""
                            },
                            "value": "liquidatePosition(address,int24,int24)"
                          },
                          {
                            "id": 61,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "954:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 62,
                            "name": "_tickLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "962:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          {
                            "id": 63,
                            "name": "_tickUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "974:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_1656503eb2e5c4255df2cae56f5b5477d2e36b02c04051fb09dc2f89dc92a92e",
                              "typeString": "literal_string \"liquidatePosition(address,int24,int24)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          ],
                          "expression": {
                            "id": 58,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "888:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "888:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "888:97:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 56,
                        "name": "marginEngineAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "863:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "863:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "863:123:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "821:165:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1013:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c206d617267696e456e67696e652e6c6971756964617465506f736974696f6e285f6f776e65722c205f7469636b4c6f7765722c205f7469636b557070657229206661696c6564",
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1022:76:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94947593effcba46c0f40cbb378bc6ca4ed8e1bf6b7caa9e8f695bf9e8cedced",
                          "typeString": "literal_string \"call marginEngine.liquidatePosition(_owner, _tickLower, _tickUpper) failed\""
                        },
                        "value": "call marginEngine.liquidatePosition(_owner, _tickLower, _tickUpper) failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94947593effcba46c0f40cbb378bc6ca4ed8e1bf6b7caa9e8f695bf9e8cedced",
                          "typeString": "literal_string \"call marginEngine.liquidatePosition(_owner, _tickLower, _tickUpper) failed\""
                        }
                      ],
                      "id": 67,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1005:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1005:94:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "1005:94:2"
                },
                {
                  "assignments": [
                    73
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73,
                      "mutability": "mutable",
                      "name": "liquidationReward",
                      "nameLocation": "1115:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 84,
                      "src": "1110:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 72,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1110:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 76,
                        "name": "returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1147:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1160:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 77,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1160:4:2",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 79,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1159:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 74,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1136:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1136:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1109:57:2"
                },
                {
                  "expression": {
                    "id": 82,
                    "name": "liquidationReward",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73,
                    "src": "1184:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 41,
                  "id": 83,
                  "nodeType": "Return",
                  "src": "1177:24:2"
                }
              ]
            },
            "functionSelector": "1656503e",
            "id": 85,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 188,
                  "src": "602:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "602:9:2"
              }
            ],
            "name": "liquidatePosition",
            "nameLocation": "493:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "528:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "520:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "_tickLower",
                  "nameLocation": "550:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "544:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "_tickUpper",
                  "nameLocation": "576:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "570:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "510:82:2"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "621:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "621:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "620:9:2"
            },
            "scope": 141,
            "src": "484:724:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              270
            ],
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "1360:661:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 97,
                          "name": "marginEngineAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "1378:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1409:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1401:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 98,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1401:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1401:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1378:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d617267696e20656e67696e6520616464726573732068617320746f20626520736574",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1413:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16390fd792f477e73466fcf087c70454416bd23d307edfe5e5309f14e6636aee",
                          "typeString": "literal_string \"margin engine address has to be set\""
                        },
                        "value": "margin engine address has to be set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16390fd792f477e73466fcf087c70454416bd23d307edfe5e5309f14e6636aee",
                          "typeString": "literal_string \"margin engine address has to be set\""
                        }
                      ],
                      "id": 96,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1370:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1370:81:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:81:2"
                },
                {
                  "assignments": [
                    107,
                    109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 107,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1557:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 139,
                      "src": "1552:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 106,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1552:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 109,
                      "mutability": "mutable",
                      "name": "returnData",
                      "nameLocation": "1579:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 139,
                      "src": "1566:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 108,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1566:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 121,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "676574506f736974696f6e4d617267696e526571756972656d656e7428616464726573732c696e7432342c696e7432342c626f6f6c29",
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1642:56:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f1216105c9dec3e0098be6afce1e1065bb120dfc415a27d7680a46b6cdec621c",
                              "typeString": "literal_string \"getPositionMarginRequirement(address,int24,int24,bool)\""
                            },
                            "value": "getPositionMarginRequirement(address,int24,int24,bool)"
                          },
                          {
                            "id": 115,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87,
                            "src": "1700:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 116,
                            "name": "_tickLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "1708:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          {
                            "id": 117,
                            "name": "_tickUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "1720:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1732:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f1216105c9dec3e0098be6afce1e1065bb120dfc415a27d7680a46b6cdec621c",
                              "typeString": "literal_string \"getPositionMarginRequirement(address,int24,int24,bool)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 112,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1618:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1618:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1618:119:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 110,
                        "name": "marginEngineAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1593:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "1593:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1593:145:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1551:187:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 123,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "1805:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c206d617267696e456e67696e652e676574506f736974696f6e4d617267696e526571756972656d656e74285f6f776e65722c205f7469636b4c6f7765722c205f7469636b55707065722c205f69734c4d29206661696c6564",
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1814:94:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7b80a2fb1b142353a3ef3f0d79f949b5321322f3d23a3c840c6116311c53cf5",
                          "typeString": "literal_string \"call marginEngine.getPositionMarginRequirement(_owner, _tickLower, _tickUpper, _isLM) failed\""
                        },
                        "value": "call marginEngine.getPositionMarginRequirement(_owner, _tickLower, _tickUpper, _isLM) failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7b80a2fb1b142353a3ef3f0d79f949b5321322f3d23a3c840c6116311c53cf5",
                          "typeString": "literal_string \"call marginEngine.getPositionMarginRequirement(_owner, _tickLower, _tickUpper, _isLM) failed\""
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1797:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1797:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1797:112:2"
                },
                {
                  "assignments": [
                    128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 128,
                      "mutability": "mutable",
                      "name": "marginRequirement",
                      "nameLocation": "1925:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 139,
                      "src": "1920:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 127,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1920:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 136,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 131,
                        "name": "returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1957:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1970:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1970:7:2",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 134,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1969:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 129,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1946:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1946:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1946:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1919:60:2"
                },
                {
                  "expression": {
                    "id": 137,
                    "name": "marginRequirement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 128,
                    "src": "1997:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 95,
                  "id": 138,
                  "nodeType": "Return",
                  "src": "1990:24:2"
                }
              ]
            },
            "functionSelector": "55ad2ea9",
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPositionMarginRequirement",
            "nameLocation": "1223:28:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1269:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1261:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_tickLower",
                  "nameLocation": "1291:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1285:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_tickUpper",
                  "nameLocation": "1317:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1311:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1251:82:2"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1352:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1352:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1351:9:2"
            },
            "scope": 141,
            "src": "1214:807:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 142,
        "src": "185:1839:2",
        "usedErrors": []
      }
    ],
    "src": "33:1991:2"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161080238038061080283398101604081905261002f91610113565b610038336100c3565b6001600160a01b03811661009e5760405162461bcd60e51b815260206004820152602360248201527f6d617267696e20656e67696e6520616464726573732068617320746f206265206044820152621cd95d60ea1b606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055610143565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561012557600080fd5b81516001600160a01b038116811461013c57600080fd5b9392505050565b6106b0806101526000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631656503e1461005c57806355ad2ea914610082578063715018a6146100955780638da5cb5b1461009f578063f2fde38b146100ba575b600080fd5b61006f61006a366004610549565b6100cd565b6040519081526020015b60405180910390f35b61006f610090366004610549565b61027f565b61009d6103fa565b005b6000546040516001600160a01b039091168152602001610079565b61009d6100c836600461058c565b610430565b600080546001600160a01b031633146101015760405162461bcd60e51b81526004016100f8906105ae565b60405180910390fd5b6001546001600160a01b03166101295760405162461bcd60e51b81526004016100f8906105e3565b6001546040516001600160a01b038681166024830152600286810b604484015285900b6064830152600092839291169060840160408051601f198184030181529181526020820180516001600160e01b0316630b2b281f60e11b179052516101919190610626565b6000604051808303816000865af19150503d80600081146101ce576040519150601f19603f3d011682016040523d82523d6000602084013e6101d3565b606091505b50915091508161025e5760405162461bcd60e51b815260206004820152604a60248201527f63616c6c206d617267696e456e67696e652e6c6971756964617465506f73697460448201527f696f6e285f6f776e65722c205f7469636b4c6f7765722c205f7469636b557070606482015269195c8a4819985a5b195960b21b608482015260a4016100f8565b6000818060200190518101906102749190610661565b979650505050505050565b6001546000906001600160a01b03166102aa5760405162461bcd60e51b81526004016100f8906105e3565b600180546040516001600160a01b038781166024830152600287810b604484015286900b606483015260848201939093526000928392169060a40160408051601f198184030181529181526020820180516001600160e01b031663f121610560e01b1790525161031a9190610626565b6000604051808303816000865af19150503d8060008114610357576040519150601f19603f3d011682016040523d82523d6000602084013e61035c565b606091505b50915091508161025e5760405162461bcd60e51b815260206004820152605c60248201527f63616c6c206d617267696e456e67696e652e676574506f736974696f6e4d617260448201527f67696e526571756972656d656e74285f6f776e65722c205f7469636b4c6f776560648201527f722c205f7469636b55707065722c205f69734c4d29206661696c656400000000608482015260a4016100f8565b6000546001600160a01b031633146104245760405162461bcd60e51b81526004016100f8906105ae565b61042e60006104cb565b565b6000546001600160a01b0316331461045a5760405162461bcd60e51b81526004016100f8906105ae565b6001600160a01b0381166104bf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f8565b6104c8816104cb565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461053257600080fd5b919050565b8035600281900b811461053257600080fd5b60008060006060848603121561055e57600080fd5b6105678461051b565b925061057560208501610537565b915061058360408501610537565b90509250925092565b60006020828403121561059e57600080fd5b6105a78261051b565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526023908201527f6d617267696e20656e67696e6520616464726573732068617320746f206265206040820152621cd95d60ea1b606082015260800190565b6000825160005b81811015610647576020818601810151858301520161062d565b81811115610656576000828501525b509190910192915050565b60006020828403121561067357600080fd5b505191905056fea2646970667358221220f3ecd8436ffe0315ff3c871f7d3237baf4b3eb01cb38f84f8786a0c7c606645464736f6c63430008090033",
  "bytecodeSha1": "d5e3b0562fb8d4c343658f8a2e7c79119b005ead",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "LiquidationBot",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "13": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "LiquidationBot.getPositionMarginRequirement": {
          "12": [
            1805,
            1812,
            true
          ]
        },
        "LiquidationBot.liquidatePosition": {
          "11": [
            1013,
            1020,
            true
          ]
        }
      },
      "3": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "9": [
            2378,
            2395
          ],
          "10": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "6": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "7": [
            1998,
            2071
          ],
          "8": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "1": [
            712,
            729
          ]
        }
      },
      "2": {
        "LiquidationBot.getPositionMarginRequirement": {
          "4": [
            1370,
            1451
          ],
          "5": [
            1797,
            1909
          ]
        },
        "LiquidationBot.liquidatePosition": {
          "2": [
            640,
            721
          ],
          "3": [
            1005,
            1099
          ]
        }
      },
      "3": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "ILiquidationBot",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c80631656503e1461005c57806355ad2ea914610082578063715018a6146100955780638da5cb5b1461009f578063f2fde38b146100ba575b600080fd5b61006f61006a366004610549565b6100cd565b6040519081526020015b60405180910390f35b61006f610090366004610549565b61027f565b61009d6103fa565b005b6000546040516001600160a01b039091168152602001610079565b61009d6100c836600461058c565b610430565b600080546001600160a01b031633146101015760405162461bcd60e51b81526004016100f8906105ae565b60405180910390fd5b6001546001600160a01b03166101295760405162461bcd60e51b81526004016100f8906105e3565b6001546040516001600160a01b038681166024830152600286810b604484015285900b6064830152600092839291169060840160408051601f198184030181529181526020820180516001600160e01b0316630b2b281f60e11b179052516101919190610626565b6000604051808303816000865af19150503d80600081146101ce576040519150601f19603f3d011682016040523d82523d6000602084013e6101d3565b606091505b50915091508161025e5760405162461bcd60e51b815260206004820152604a60248201527f63616c6c206d617267696e456e67696e652e6c6971756964617465506f73697460448201527f696f6e285f6f776e65722c205f7469636b4c6f7765722c205f7469636b557070606482015269195c8a4819985a5b195960b21b608482015260a4016100f8565b6000818060200190518101906102749190610661565b979650505050505050565b6001546000906001600160a01b03166102aa5760405162461bcd60e51b81526004016100f8906105e3565b600180546040516001600160a01b038781166024830152600287810b604484015286900b606483015260848201939093526000928392169060a40160408051601f198184030181529181526020820180516001600160e01b031663f121610560e01b1790525161031a9190610626565b6000604051808303816000865af19150503d8060008114610357576040519150601f19603f3d011682016040523d82523d6000602084013e61035c565b606091505b50915091508161025e5760405162461bcd60e51b815260206004820152605c60248201527f63616c6c206d617267696e456e67696e652e676574506f736974696f6e4d617260448201527f67696e526571756972656d656e74285f6f776e65722c205f7469636b4c6f776560648201527f722c205f7469636b55707065722c205f69734c4d29206661696c656400000000608482015260a4016100f8565b6000546001600160a01b031633146104245760405162461bcd60e51b81526004016100f8906105ae565b61042e60006104cb565b565b6000546001600160a01b0316331461045a5760405162461bcd60e51b81526004016100f8906105ae565b6001600160a01b0381166104bf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f8565b6104c8816104cb565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461053257600080fd5b919050565b8035600281900b811461053257600080fd5b60008060006060848603121561055e57600080fd5b6105678461051b565b925061057560208501610537565b915061058360408501610537565b90509250925092565b60006020828403121561059e57600080fd5b6105a78261051b565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526023908201527f6d617267696e20656e67696e6520616464726573732068617320746f206265206040820152621cd95d60ea1b606082015260800190565b6000825160005b81811015610647576020818601810151858301520161062d565b81811115610656576000828501525b509190910192915050565b60006020828403121561067357600080fd5b505191905056fea2646970667358221220f3ecd8436ffe0315ff3c871f7d3237baf4b3eb01cb38f84f8786a0c7c606645464736f6c63430008090033",
  "deployedSourceMap": "185:1839:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;484:724;;;;;;:::i;:::-;;:::i;:::-;;;834:25:4;;;822:2;807:18;484:724:2;;;;;;;;1214:807;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;:::-;;1036:85;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:0;;;1016:51:4;;1004:2;989:18;1036:85:0;870:203:4;1918:198:0;;;;;;:::i;:::-;;:::i;484:724:2:-;621:7;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;648:19:2::1;::::0;-1:-1:-1;;;;;648:19:2::1;640:81;;;;-1:-1:-1::0;;;640:81:2::1;;;;;;;:::i;:::-;863:19;::::0;888:97:::1;::::0;-1:-1:-1;;;;;2246:32:4;;;888:97:2::1;::::0;::::1;2228:51:4::0;2326:1;2315:21;;;2295:18;;;2288:49;2373:21;;;2353:18;;;2346:49;822:12:2::1;::::0;;;863:19;::::1;::::0;2201:18:4;;888:97:2::1;::::0;;-1:-1:-1;;888:97:2;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;888:97:2::1;-1:-1:-1::0;;;888:97:2::1;::::0;;863:123;::::1;::::0;888:97;863:123:::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:165;;;;1013:7;1005:94;;;::::0;-1:-1:-1;;;1005:94:2;;3039:2:4;1005:94:2::1;::::0;::::1;3021:21:4::0;3078:2;3058:18;;;3051:30;3117:34;3097:18;;;3090:62;3188:34;3168:18;;;3161:62;-1:-1:-1;;;3239:19:4;;;3232:41;3290:19;;1005:94:2::1;2837:478:4::0;1005:94:2::1;1110:22;1147:10;1136:30;;;;;;;;;;;;:::i;:::-;1109:57:::0;484:724;-1:-1:-1;;;;;;;484:724:2:o;1214:807::-;1378:19;;1352:7;;-1:-1:-1;;;;;1378:19:2;1370:81;;;;-1:-1:-1;;;1370:81:2;;;;;;;:::i;:::-;1593:19;;;1618:119;;-1:-1:-1;;;;;3744:32:4;;;1618:119:2;;;3726:51:4;3824:1;3813:21;;;3793:18;;;3786:49;3871:21;;;3851:18;;;3844:49;3909:18;;;3902:50;;;;1552:12:2;;;;1593:19;;3698::4;;1618:119:2;;;-1:-1:-1;;1618:119:2;;;;;;;;;;;;;;-1:-1:-1;;;;;1618:119:2;-1:-1:-1;;;1618:119:2;;;1593:145;;;1618:119;1593:145;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:187;;;;1805:7;1797:112;;;;-1:-1:-1;;;1797:112:2;;4165:2:4;1797:112:2;;;4147:21:4;4204:2;4184:18;;;4177:30;4243:34;4223:18;;;4216:62;4314:34;4294:18;;;4287:62;4386:30;4365:19;;;4358:59;4434:19;;1797:112:2;3963:496:4;1668:101:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1918:198::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4666:2:4;1998:73:0::1;::::0;::::1;4648:21:4::0;4705:2;4685:18;;;4678:30;4744:34;4724:18;;;4717:62;-1:-1:-1;;;4795:18:4;;;4788:36;4841:19;;1998:73:0::1;4464:402:4::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:173:4:-;82:20;;-1:-1:-1;;;;;131:31:4;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:160::-;258:20;;318:1;307:20;;;297:31;;287:59;;342:1;339;332:12;357:326;430:6;438;446;499:2;487:9;478:7;474:23;470:32;467:52;;;515:1;512;505:12;467:52;538:29;557:9;538:29;:::i;:::-;528:39;;586:36;618:2;607:9;603:18;586:36;:::i;:::-;576:46;;641:36;673:2;662:9;658:18;641:36;:::i;:::-;631:46;;357:326;;;;;:::o;1078:186::-;1137:6;1190:2;1178:9;1169:7;1165:23;1161:32;1158:52;;;1206:1;1203;1196:12;1158:52;1229:29;1248:9;1229:29;:::i;:::-;1219:39;1078:186;-1:-1:-1;;;1078:186:4:o;1269:356::-;1471:2;1453:21;;;1490:18;;;1483:30;1549:34;1544:2;1529:18;;1522:62;1616:2;1601:18;;1269:356::o;1630:399::-;1832:2;1814:21;;;1871:2;1851:18;;;1844:30;1910:34;1905:2;1890:18;;1883:62;-1:-1:-1;;;1976:2:4;1961:18;;1954:33;2019:3;2004:19;;1630:399::o;2406:426::-;2535:3;2573:6;2567:13;2598:1;2608:129;2622:6;2619:1;2616:13;2608:129;;;2720:4;2704:14;;;2700:25;;2694:32;2681:11;;;2674:53;2637:12;2608:129;;;2755:6;2752:1;2749:13;2746:48;;;2790:1;2781:6;2776:3;2772:16;2765:27;2746:48;-1:-1:-1;2810:16:4;;;;;2406:426;-1:-1:-1;;2406:426:4:o;3320:184::-;3390:6;3443:2;3431:9;3422:7;3418:23;3414:32;3411:52;;;3459:1;3456;3449:12;3411:52;-1:-1:-1;3482:16:4;;3320:184;-1:-1:-1;3320:184:4:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    185,
    2024
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1656503E EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x55AD2EA9 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x549 JUMP JUMPDEST PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x27F JUMP JUMPDEST PUSH2 0x9D PUSH2 0x3FA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0x9D PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x58C JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x101 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x129 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x2 DUP7 DUP2 SIGNEXTEND PUSH1 0x44 DUP5 ADD MSTORE DUP6 SWAP1 SIGNEXTEND PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xB2B281F PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x626 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x25E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C206D617267696E456E67696E652E6C6971756964617465506F736974 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696F6E285F6F776E65722C205F7469636B4C6F7765722C205F7469636B557070 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x195C8A4819985A5B1959 PUSH1 0xB2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x661 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x2 DUP8 DUP2 SIGNEXTEND PUSH1 0x44 DUP5 ADD MSTORE DUP7 SWAP1 SIGNEXTEND PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 AND SWAP1 PUSH1 0xA4 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xF1216105 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x626 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x35C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x25E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C206D617267696E456E67696E652E676574506F736974696F6E4D6172 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x67696E526571756972656D656E74285F6F776E65722C205F7469636B4C6F7765 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x722C205F7469636B55707065722C205F69734C4D29206661696C656400000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x424 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x5AE JUMP JUMPDEST PUSH2 0x42E PUSH1 0x0 PUSH2 0x4CB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF8 JUMP JUMPDEST PUSH2 0x4C8 DUP2 PUSH2 0x4CB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x567 DUP5 PUSH2 0x51B JUMP JUMPDEST SWAP3 POP PUSH2 0x575 PUSH1 0x20 DUP6 ADD PUSH2 0x537 JUMP JUMPDEST SWAP2 POP PUSH2 0x583 PUSH1 0x40 DUP6 ADD PUSH2 0x537 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A7 DUP3 PUSH2 0x51B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x6D617267696E20656E67696E6520616464726573732068617320746F20626520 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x1CD95D PUSH1 0xEA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x647 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x62D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xEC 0xD8 NUMBER PUSH16 0xFE0315FF3C871F7D3237BAF4B3EB01CB CODESIZE 0xF8 0x4F DUP8 DUP7 LOG0 0xC7 0xC6 MOD PUSH5 0x5464736F6C PUSH4 0x43000809 STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        185,
        2024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1656503E"
    },
    "38": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "EQ",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x55AD2EA9"
    },
    "49": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "EQ",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82"
    },
    "53": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "60": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x95"
    },
    "64": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "71": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9F"
    },
    "75": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBA"
    },
    "86": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        185,
        2024
      ],
      "op": "REVERT",
      "path": "2"
    },
    "92": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "93": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F"
    },
    "96": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A"
    },
    "99": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "100": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "102": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x549"
    },
    "105": {
      "fn": "LiquidationBot.liquidatePosition",
      "jump": "i",
      "offset": [
        484,
        1208
      ],
      "op": "JUMP",
      "path": "2"
    },
    "106": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "107": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD"
    },
    "110": {
      "fn": "LiquidationBot.liquidatePosition",
      "jump": "i",
      "offset": [
        484,
        1208
      ],
      "op": "JUMP",
      "path": "2"
    },
    "111": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "112": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "114": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "115": {
      "op": "SWAP1"
    },
    "116": {
      "op": "DUP2"
    },
    "117": {
      "op": "MSTORE"
    },
    "118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "120": {
      "op": "ADD"
    },
    "121": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "122": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "124": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "125": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "127": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "SUB",
      "path": "2"
    },
    "128": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "129": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "RETURN",
      "path": "2"
    },
    "130": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1214,
        2021
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "131": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1214,
        2021
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F"
    },
    "134": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1214,
        2021
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x90"
    },
    "137": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1214,
        2021
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "138": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1214,
        2021
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "140": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1214,
        2021
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x549"
    },
    "143": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "jump": "i",
      "offset": [
        1214,
        2021
      ],
      "op": "JUMP",
      "path": "2"
    },
    "144": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1214,
        2021
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "145": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1214,
        2021
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27F"
    },
    "148": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "jump": "i",
      "offset": [
        1214,
        2021
      ],
      "op": "JUMP",
      "path": "2"
    },
    "149": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "150": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D"
    },
    "153": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FA"
    },
    "156": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "157": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "158": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "159": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "160": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "162": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "163": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "165": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "172": {
      "op": "SHL"
    },
    "173": {
      "op": "SUB"
    },
    "174": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "175": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "176": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "177": {
      "op": "DUP2"
    },
    "178": {
      "op": "MSTORE"
    },
    "179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "181": {
      "op": "ADD"
    },
    "182": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79"
    },
    "185": {
      "op": "JUMP"
    },
    "186": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "187": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D"
    },
    "190": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC8"
    },
    "193": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "194": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "196": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58C"
    },
    "199": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "200": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "201": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430"
    },
    "204": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "205": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "206": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        621,
        628
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "208": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "209": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "216": {
      "op": "SHL"
    },
    "217": {
      "op": "SUB"
    },
    "218": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "219": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 1
    },
    "220": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "221": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101"
    },
    "224": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "225": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "227": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "234": {
      "op": "SHL"
    },
    "235": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "236": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "237": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "239": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "240": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "243": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "244": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AE"
    },
    "247": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "248": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "249": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "251": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "252": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "253": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "254": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "255": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "256": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "257": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "258": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        648,
        667
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "260": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        648,
        667
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "267": {
      "op": "SHL"
    },
    "268": {
      "op": "SUB"
    },
    "269": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        648,
        667
      ],
      "op": "AND",
      "path": "2"
    },
    "270": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        640,
        721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x129"
    },
    "273": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        640,
        721
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "274": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        640,
        721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "276": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        640,
        721
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "281": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "283": {
      "op": "SHL"
    },
    "284": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        640,
        721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "285": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        640,
        721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "286": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        640,
        721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "288": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        640,
        721
      ],
      "op": "ADD",
      "path": "2"
    },
    "289": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        640,
        721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF8"
    },
    "292": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        640,
        721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "293": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        640,
        721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E3"
    },
    "296": {
      "fn": "LiquidationBot.liquidatePosition",
      "jump": "i",
      "offset": [
        640,
        721
      ],
      "op": "JUMP",
      "path": "2"
    },
    "297": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        640,
        721
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "298": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "300": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        882
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "301": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "303": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "310": {
      "op": "SHL"
    },
    "311": {
      "op": "SUB"
    },
    "312": {
      "op": "DUP7"
    },
    "313": {
      "op": "DUP2"
    },
    "314": {
      "op": "AND"
    },
    "315": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "317": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "DUP4",
      "path": "2"
    },
    "318": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "ADD",
      "path": "2"
    },
    "319": {
      "op": "MSTORE"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "322": {
      "op": "DUP7"
    },
    "323": {
      "op": "DUP2"
    },
    "324": {
      "op": "SIGNEXTEND"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "327": {
      "op": "DUP5"
    },
    "328": {
      "op": "ADD"
    },
    "329": {
      "op": "MSTORE"
    },
    "330": {
      "op": "DUP6"
    },
    "331": {
      "op": "SWAP1"
    },
    "332": {
      "op": "SIGNEXTEND"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "335": {
      "op": "DUP4"
    },
    "336": {
      "op": "ADD"
    },
    "337": {
      "op": "MSTORE"
    },
    "338": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        822,
        834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "340": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        822,
        834
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "341": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        822,
        834
      ],
      "op": "DUP4",
      "path": "2"
    },
    "342": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        822,
        834
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "343": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        882
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "344": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        882
      ],
      "op": "AND",
      "path": "2"
    },
    "345": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        882
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "348": {
      "op": "ADD"
    },
    "349": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "351": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "DUP1",
      "path": "2"
    },
    "352": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "355": {
      "op": "NOT"
    },
    "356": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "DUP2",
      "path": "2"
    },
    "357": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "DUP5",
      "path": "2"
    },
    "358": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "SUB",
      "path": "2"
    },
    "359": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "ADD",
      "path": "2"
    },
    "360": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "DUP2",
      "path": "2"
    },
    "361": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "362": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "363": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "DUP2",
      "path": "2"
    },
    "364": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "365": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "367": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "368": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "ADD",
      "path": "2"
    },
    "369": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "DUP1",
      "path": "2"
    },
    "370": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "375": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "377": {
      "op": "SHL"
    },
    "378": {
      "op": "SUB"
    },
    "379": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "AND",
      "path": "2"
    },
    "380": {
      "op": "PUSH4",
      "value": "0xB2B281F"
    },
    "385": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "387": {
      "op": "SHL"
    },
    "388": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "OR",
      "path": "2"
    },
    "389": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "390": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "391": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "392": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x191"
    },
    "395": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "396": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        888,
        985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "397": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x626"
    },
    "400": {
      "fn": "LiquidationBot.liquidatePosition",
      "jump": "i",
      "offset": [
        863,
        986
      ],
      "op": "JUMP",
      "path": "2"
    },
    "401": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "402": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "404": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "406": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "407": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "DUP1",
      "path": "2"
    },
    "408": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "DUP4",
      "path": "2"
    },
    "409": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "SUB",
      "path": "2"
    },
    "410": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "DUP2",
      "path": "2"
    },
    "411": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "413": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "DUP7",
      "path": "2"
    },
    "414": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "GAS",
      "path": "2"
    },
    "415": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "CALL",
      "path": "2"
    },
    "416": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "417": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "POP",
      "path": "2"
    },
    "418": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "POP",
      "path": "2"
    },
    "419": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "420": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "DUP1",
      "path": "2"
    },
    "421": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "423": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "DUP2",
      "path": "2"
    },
    "424": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "EQ",
      "path": "2"
    },
    "425": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CE"
    },
    "428": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "429": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "431": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "432": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "433": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "POP",
      "path": "2"
    },
    "434": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "436": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "NOT",
      "path": "2"
    },
    "437": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "439": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "440": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "ADD",
      "path": "2"
    },
    "441": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "AND",
      "path": "2"
    },
    "442": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "DUP3",
      "path": "2"
    },
    "443": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "ADD",
      "path": "2"
    },
    "444": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "446": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "447": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "448": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "DUP3",
      "path": "2"
    },
    "449": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "450": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "451": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "453": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "455": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "DUP5",
      "path": "2"
    },
    "456": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "ADD",
      "path": "2"
    },
    "457": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "458": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D3"
    },
    "461": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "JUMP",
      "path": "2"
    },
    "462": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "463": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "465": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "466": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "POP",
      "path": "2"
    },
    "467": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "468": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        863,
        986
      ],
      "op": "POP",
      "path": "2"
    },
    "469": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        821,
        986
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "470": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        821,
        986
      ],
      "op": "POP",
      "path": "2"
    },
    "471": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        821,
        986
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "472": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        821,
        986
      ],
      "op": "POP",
      "path": "2"
    },
    "473": {
      "branch": 11,
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1013,
        1020
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 3
    },
    "474": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1005,
        1099
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25E"
    },
    "477": {
      "branch": 11,
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1005,
        1099
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "478": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1005,
        1099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "480": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1005,
        1099
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "481": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "485": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "487": {
      "op": "SHL"
    },
    "488": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1005,
        1099
      ],
      "op": "DUP2",
      "path": "2"
    },
    "489": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1005,
        1099
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "492": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1005,
        1099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "494": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1005,
        1099
      ],
      "op": "DUP3",
      "path": "2"
    },
    "495": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1005,
        1099
      ],
      "op": "ADD",
      "path": "2"
    },
    "496": {
      "op": "MSTORE"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x4A"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "501": {
      "op": "DUP3"
    },
    "502": {
      "op": "ADD"
    },
    "503": {
      "op": "MSTORE"
    },
    "504": {
      "op": "PUSH32",
      "value": "0x63616C6C206D617267696E456E67696E652E6C6971756964617465506F736974"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "539": {
      "op": "DUP3"
    },
    "540": {
      "op": "ADD"
    },
    "541": {
      "op": "MSTORE"
    },
    "542": {
      "op": "PUSH32",
      "value": "0x696F6E285F6F776E65722C205F7469636B4C6F7765722C205F7469636B557070"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "577": {
      "op": "DUP3"
    },
    "578": {
      "op": "ADD"
    },
    "579": {
      "op": "MSTORE"
    },
    "580": {
      "op": "PUSH10",
      "value": "0x195C8A4819985A5B1959"
    },
    "591": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "593": {
      "op": "SHL"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "596": {
      "op": "DUP3"
    },
    "597": {
      "op": "ADD"
    },
    "598": {
      "op": "MSTORE"
    },
    "599": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "601": {
      "op": "ADD"
    },
    "602": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1005,
        1099
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF8"
    },
    "605": {
      "op": "JUMP"
    },
    "606": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1005,
        1099
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "607": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1110,
        1132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "609": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1147,
        1157
      ],
      "op": "DUP2",
      "path": "2"
    },
    "610": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1136,
        1166
      ],
      "op": "DUP1",
      "path": "2"
    },
    "611": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1136,
        1166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "613": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1136,
        1166
      ],
      "op": "ADD",
      "path": "2"
    },
    "614": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1136,
        1166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "615": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1136,
        1166
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "616": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1136,
        1166
      ],
      "op": "DUP2",
      "path": "2"
    },
    "617": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1136,
        1166
      ],
      "op": "ADD",
      "path": "2"
    },
    "618": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1136,
        1166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "619": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1136,
        1166
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x274"
    },
    "622": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1136,
        1166
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "623": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1136,
        1166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "624": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1136,
        1166
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x661"
    },
    "627": {
      "fn": "LiquidationBot.liquidatePosition",
      "jump": "i",
      "offset": [
        1136,
        1166
      ],
      "op": "JUMP",
      "path": "2"
    },
    "628": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1136,
        1166
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "629": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        1109,
        1166
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "630": {
      "fn": "LiquidationBot.liquidatePosition",
      "offset": [
        484,
        1208
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "op": "POP"
    },
    "634": {
      "op": "POP"
    },
    "635": {
      "op": "POP"
    },
    "636": {
      "op": "POP"
    },
    "637": {
      "op": "POP"
    },
    "638": {
      "fn": "LiquidationBot.liquidatePosition",
      "jump": "o",
      "offset": [
        484,
        1208
      ],
      "op": "JUMP",
      "path": "2"
    },
    "639": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1214,
        2021
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "640": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1378,
        1397
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x1"
    },
    "642": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1378,
        1397
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "643": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1352,
        1359
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "645": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1352,
        1359
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "652": {
      "op": "SHL"
    },
    "653": {
      "op": "SUB"
    },
    "654": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1378,
        1397
      ],
      "op": "AND",
      "path": "2"
    },
    "655": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1370,
        1451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AA"
    },
    "658": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1370,
        1451
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "659": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1370,
        1451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "661": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1370,
        1451
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "662": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "666": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "668": {
      "op": "SHL"
    },
    "669": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1370,
        1451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "670": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1370,
        1451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "671": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1370,
        1451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "673": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1370,
        1451
      ],
      "op": "ADD",
      "path": "2"
    },
    "674": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1370,
        1451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF8"
    },
    "677": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1370,
        1451
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "678": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1370,
        1451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E3"
    },
    "681": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "jump": "i",
      "offset": [
        1370,
        1451
      ],
      "op": "JUMP",
      "path": "2"
    },
    "682": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1370,
        1451
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "683": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "685": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "686": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1612
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "687": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "689": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "696": {
      "op": "SHL"
    },
    "697": {
      "op": "SUB"
    },
    "698": {
      "op": "DUP8"
    },
    "699": {
      "op": "DUP2"
    },
    "700": {
      "op": "AND"
    },
    "701": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "703": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "DUP4",
      "path": "2"
    },
    "704": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "ADD",
      "path": "2"
    },
    "705": {
      "op": "MSTORE"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "708": {
      "op": "DUP8"
    },
    "709": {
      "op": "DUP2"
    },
    "710": {
      "op": "SIGNEXTEND"
    },
    "711": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "713": {
      "op": "DUP5"
    },
    "714": {
      "op": "ADD"
    },
    "715": {
      "op": "MSTORE"
    },
    "716": {
      "op": "DUP7"
    },
    "717": {
      "op": "SWAP1"
    },
    "718": {
      "op": "SIGNEXTEND"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "721": {
      "op": "DUP4"
    },
    "722": {
      "op": "ADD"
    },
    "723": {
      "op": "MSTORE"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "726": {
      "op": "DUP3"
    },
    "727": {
      "op": "ADD"
    },
    "728": {
      "op": "SWAP4"
    },
    "729": {
      "op": "SWAP1"
    },
    "730": {
      "op": "SWAP4"
    },
    "731": {
      "op": "MSTORE"
    },
    "732": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1552,
        1564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "734": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1552,
        1564
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "735": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1552,
        1564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "736": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1552,
        1564
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "737": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1612
      ],
      "op": "AND",
      "path": "2"
    },
    "738": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "739": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "741": {
      "op": "ADD"
    },
    "742": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "744": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "DUP1",
      "path": "2"
    },
    "745": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "748": {
      "op": "NOT"
    },
    "749": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "DUP2",
      "path": "2"
    },
    "750": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "DUP5",
      "path": "2"
    },
    "751": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "SUB",
      "path": "2"
    },
    "752": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "ADD",
      "path": "2"
    },
    "753": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "DUP2",
      "path": "2"
    },
    "754": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "755": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "756": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "DUP2",
      "path": "2"
    },
    "757": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "758": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "760": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "DUP3",
      "path": "2"
    },
    "761": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "ADD",
      "path": "2"
    },
    "762": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "DUP1",
      "path": "2"
    },
    "763": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "op": "SUB"
    },
    "772": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "AND",
      "path": "2"
    },
    "773": {
      "op": "PUSH4",
      "value": "0xF1216105"
    },
    "778": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "780": {
      "op": "SHL"
    },
    "781": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "OR",
      "path": "2"
    },
    "782": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "783": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "784": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "785": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31A"
    },
    "788": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "789": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1618,
        1737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "790": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x626"
    },
    "793": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "jump": "i",
      "offset": [
        1593,
        1738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "794": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "795": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "797": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "799": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "800": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "801": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "DUP4",
      "path": "2"
    },
    "802": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "SUB",
      "path": "2"
    },
    "803": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "804": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "806": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "DUP7",
      "path": "2"
    },
    "807": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "GAS",
      "path": "2"
    },
    "808": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "CALL",
      "path": "2"
    },
    "809": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "810": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "POP",
      "path": "2"
    },
    "811": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "POP",
      "path": "2"
    },
    "812": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "813": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "814": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "816": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "817": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "EQ",
      "path": "2"
    },
    "818": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x357"
    },
    "821": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "822": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "824": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "825": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "826": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "POP",
      "path": "2"
    },
    "827": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "829": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "NOT",
      "path": "2"
    },
    "830": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "832": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "833": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "ADD",
      "path": "2"
    },
    "834": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "AND",
      "path": "2"
    },
    "835": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "DUP3",
      "path": "2"
    },
    "836": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "ADD",
      "path": "2"
    },
    "837": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "839": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "840": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "841": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "DUP3",
      "path": "2"
    },
    "842": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "843": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "844": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "846": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "848": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "DUP5",
      "path": "2"
    },
    "849": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "ADD",
      "path": "2"
    },
    "850": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "851": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35C"
    },
    "854": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "855": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "856": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "858": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "859": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "POP",
      "path": "2"
    },
    "860": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "861": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1593,
        1738
      ],
      "op": "POP",
      "path": "2"
    },
    "862": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "863": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1551,
        1738
      ],
      "op": "POP",
      "path": "2"
    },
    "864": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "865": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1551,
        1738
      ],
      "op": "POP",
      "path": "2"
    },
    "866": {
      "branch": 12,
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1805,
        1812
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 5
    },
    "867": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1797,
        1909
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25E"
    },
    "870": {
      "branch": 12,
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1797,
        1909
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "871": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1797,
        1909
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "873": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1797,
        1909
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "880": {
      "op": "SHL"
    },
    "881": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1797,
        1909
      ],
      "op": "DUP2",
      "path": "2"
    },
    "882": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1797,
        1909
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "885": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1797,
        1909
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "887": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1797,
        1909
      ],
      "op": "DUP3",
      "path": "2"
    },
    "888": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1797,
        1909
      ],
      "op": "ADD",
      "path": "2"
    },
    "889": {
      "op": "MSTORE"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "894": {
      "op": "DUP3"
    },
    "895": {
      "op": "ADD"
    },
    "896": {
      "op": "MSTORE"
    },
    "897": {
      "op": "PUSH32",
      "value": "0x63616C6C206D617267696E456E67696E652E676574506F736974696F6E4D6172"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "932": {
      "op": "DUP3"
    },
    "933": {
      "op": "ADD"
    },
    "934": {
      "op": "MSTORE"
    },
    "935": {
      "op": "PUSH32",
      "value": "0x67696E526571756972656D656E74285F6F776E65722C205F7469636B4C6F7765"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "970": {
      "op": "DUP3"
    },
    "971": {
      "op": "ADD"
    },
    "972": {
      "op": "MSTORE"
    },
    "973": {
      "op": "PUSH32",
      "value": "0x722C205F7469636B55707065722C205F69734C4D29206661696C656400000000"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1008": {
      "op": "DUP3"
    },
    "1009": {
      "op": "ADD"
    },
    "1010": {
      "op": "MSTORE"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "1013": {
      "op": "ADD"
    },
    "1014": {
      "fn": "LiquidationBot.getPositionMarginRequirement",
      "offset": [
        1797,
        1909
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF8"
    },
    "1017": {
      "op": "JUMP"
    },
    "1018": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1019": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1021": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1028": {
      "op": "SHL"
    },
    "1029": {
      "op": "SUB"
    },
    "1030": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1031": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1032": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1033": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x424"
    },
    "1036": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1037": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1039": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1040": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1046": {
      "op": "SHL"
    },
    "1047": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1048": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1049": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1051": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1052": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "1055": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1056": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AE"
    },
    "1059": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1060": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1061": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x42E"
    },
    "1064": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1066": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CB"
    },
    "1069": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1070": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1071": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1072": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1073": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1075": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1082": {
      "op": "SHL"
    },
    "1083": {
      "op": "SUB"
    },
    "1084": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1085": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1086": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1087": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45A"
    },
    "1090": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1091": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1093": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1094": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1100": {
      "op": "SHL"
    },
    "1101": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1102": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1103": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1105": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1106": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "1109": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1110": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AE"
    },
    "1113": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1114": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1121": {
      "op": "SHL"
    },
    "1122": {
      "op": "SUB"
    },
    "1123": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 7
    },
    "1124": {
      "branch": 13,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BF"
    },
    "1128": {
      "branch": 13,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1129": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1131": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1132": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1138": {
      "op": "SHL"
    },
    "1139": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1140": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1143": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1145": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1146": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1147": {
      "op": "MSTORE"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1152": {
      "op": "DUP3"
    },
    "1153": {
      "op": "ADD"
    },
    "1154": {
      "op": "MSTORE"
    },
    "1155": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1190": {
      "op": "DUP3"
    },
    "1191": {
      "op": "ADD"
    },
    "1192": {
      "op": "MSTORE"
    },
    "1193": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1202": {
      "op": "SHL"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1205": {
      "op": "DUP3"
    },
    "1206": {
      "op": "ADD"
    },
    "1207": {
      "op": "MSTORE"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1210": {
      "op": "ADD"
    },
    "1211": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "1214": {
      "op": "JUMP"
    },
    "1215": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x4C8"
    },
    "1219": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CB"
    },
    "1223": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1224": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1225": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "1226": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1227": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1228": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1230": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1231": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1238": {
      "op": "SHL"
    },
    "1239": {
      "op": "SUB"
    },
    "1240": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 9
    },
    "1241": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1242": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1249": {
      "op": "SHL"
    },
    "1250": {
      "op": "SUB"
    },
    "1251": {
      "op": "NOT"
    },
    "1252": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1253": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1254": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1255": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "1256": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1257": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1258": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x40"
    },
    "1260": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1261": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1262": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1263": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1264": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "1265": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1266": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1267": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1268": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1301": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1302": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1303": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1304": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1305": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1306": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1307": {
      "op": "JUMPDEST"
    },
    "1308": {
      "op": "DUP1"
    },
    "1309": {
      "op": "CALLDATALOAD"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1316": {
      "op": "SHL"
    },
    "1317": {
      "op": "SUB"
    },
    "1318": {
      "op": "DUP2"
    },
    "1319": {
      "op": "AND"
    },
    "1320": {
      "op": "DUP2"
    },
    "1321": {
      "op": "EQ"
    },
    "1322": {
      "op": "PUSH2",
      "value": "0x532"
    },
    "1325": {
      "op": "JUMPI"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1328": {
      "op": "DUP1"
    },
    "1329": {
      "op": "REVERT"
    },
    "1330": {
      "op": "JUMPDEST"
    },
    "1331": {
      "op": "SWAP2"
    },
    "1332": {
      "op": "SWAP1"
    },
    "1333": {
      "op": "POP"
    },
    "1334": {
      "jump": "o",
      "op": "JUMP"
    },
    "1335": {
      "op": "JUMPDEST"
    },
    "1336": {
      "op": "DUP1"
    },
    "1337": {
      "op": "CALLDATALOAD"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1340": {
      "op": "DUP2"
    },
    "1341": {
      "op": "SWAP1"
    },
    "1342": {
      "op": "SIGNEXTEND"
    },
    "1343": {
      "op": "DUP2"
    },
    "1344": {
      "op": "EQ"
    },
    "1345": {
      "op": "PUSH2",
      "value": "0x532"
    },
    "1348": {
      "op": "JUMPI"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1351": {
      "op": "DUP1"
    },
    "1352": {
      "op": "REVERT"
    },
    "1353": {
      "op": "JUMPDEST"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1356": {
      "op": "DUP1"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1361": {
      "op": "DUP5"
    },
    "1362": {
      "op": "DUP7"
    },
    "1363": {
      "op": "SUB"
    },
    "1364": {
      "op": "SLT"
    },
    "1365": {
      "op": "ISZERO"
    },
    "1366": {
      "op": "PUSH2",
      "value": "0x55E"
    },
    "1369": {
      "op": "JUMPI"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1372": {
      "op": "DUP1"
    },
    "1373": {
      "op": "REVERT"
    },
    "1374": {
      "op": "JUMPDEST"
    },
    "1375": {
      "op": "PUSH2",
      "value": "0x567"
    },
    "1378": {
      "op": "DUP5"
    },
    "1379": {
      "op": "PUSH2",
      "value": "0x51B"
    },
    "1382": {
      "jump": "i",
      "op": "JUMP"
    },
    "1383": {
      "op": "JUMPDEST"
    },
    "1384": {
      "op": "SWAP3"
    },
    "1385": {
      "op": "POP"
    },
    "1386": {
      "op": "PUSH2",
      "value": "0x575"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1391": {
      "op": "DUP6"
    },
    "1392": {
      "op": "ADD"
    },
    "1393": {
      "op": "PUSH2",
      "value": "0x537"
    },
    "1396": {
      "jump": "i",
      "op": "JUMP"
    },
    "1397": {
      "op": "JUMPDEST"
    },
    "1398": {
      "op": "SWAP2"
    },
    "1399": {
      "op": "POP"
    },
    "1400": {
      "op": "PUSH2",
      "value": "0x583"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1405": {
      "op": "DUP6"
    },
    "1406": {
      "op": "ADD"
    },
    "1407": {
      "op": "PUSH2",
      "value": "0x537"
    },
    "1410": {
      "jump": "i",
      "op": "JUMP"
    },
    "1411": {
      "op": "JUMPDEST"
    },
    "1412": {
      "op": "SWAP1"
    },
    "1413": {
      "op": "POP"
    },
    "1414": {
      "op": "SWAP3"
    },
    "1415": {
      "op": "POP"
    },
    "1416": {
      "op": "SWAP3"
    },
    "1417": {
      "op": "POP"
    },
    "1418": {
      "op": "SWAP3"
    },
    "1419": {
      "jump": "o",
      "op": "JUMP"
    },
    "1420": {
      "op": "JUMPDEST"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1425": {
      "op": "DUP3"
    },
    "1426": {
      "op": "DUP5"
    },
    "1427": {
      "op": "SUB"
    },
    "1428": {
      "op": "SLT"
    },
    "1429": {
      "op": "ISZERO"
    },
    "1430": {
      "op": "PUSH2",
      "value": "0x59E"
    },
    "1433": {
      "op": "JUMPI"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1436": {
      "op": "DUP1"
    },
    "1437": {
      "op": "REVERT"
    },
    "1438": {
      "op": "JUMPDEST"
    },
    "1439": {
      "op": "PUSH2",
      "value": "0x5A7"
    },
    "1442": {
      "op": "DUP3"
    },
    "1443": {
      "op": "PUSH2",
      "value": "0x51B"
    },
    "1446": {
      "jump": "i",
      "op": "JUMP"
    },
    "1447": {
      "op": "JUMPDEST"
    },
    "1448": {
      "op": "SWAP4"
    },
    "1449": {
      "op": "SWAP3"
    },
    "1450": {
      "op": "POP"
    },
    "1451": {
      "op": "POP"
    },
    "1452": {
      "op": "POP"
    },
    "1453": {
      "jump": "o",
      "op": "JUMP"
    },
    "1454": {
      "op": "JUMPDEST"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1457": {
      "op": "DUP1"
    },
    "1458": {
      "op": "DUP3"
    },
    "1459": {
      "op": "MSTORE"
    },
    "1460": {
      "op": "DUP2"
    },
    "1461": {
      "op": "DUP2"
    },
    "1462": {
      "op": "ADD"
    },
    "1463": {
      "op": "MSTORE"
    },
    "1464": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1499": {
      "op": "DUP3"
    },
    "1500": {
      "op": "ADD"
    },
    "1501": {
      "op": "MSTORE"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "SWAP1"
    },
    "1506": {
      "jump": "o",
      "op": "JUMP"
    },
    "1507": {
      "op": "JUMPDEST"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1510": {
      "op": "DUP1"
    },
    "1511": {
      "op": "DUP3"
    },
    "1512": {
      "op": "MSTORE"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1515": {
      "op": "SWAP1"
    },
    "1516": {
      "op": "DUP3"
    },
    "1517": {
      "op": "ADD"
    },
    "1518": {
      "op": "MSTORE"
    },
    "1519": {
      "op": "PUSH32",
      "value": "0x6D617267696E20656E67696E6520616464726573732068617320746F20626520"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1554": {
      "op": "DUP3"
    },
    "1555": {
      "op": "ADD"
    },
    "1556": {
      "op": "MSTORE"
    },
    "1557": {
      "op": "PUSH3",
      "value": "0x1CD95D"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "1563": {
      "op": "SHL"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1566": {
      "op": "DUP3"
    },
    "1567": {
      "op": "ADD"
    },
    "1568": {
      "op": "MSTORE"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1571": {
      "op": "ADD"
    },
    "1572": {
      "op": "SWAP1"
    },
    "1573": {
      "jump": "o",
      "op": "JUMP"
    },
    "1574": {
      "op": "JUMPDEST"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1577": {
      "op": "DUP3"
    },
    "1578": {
      "op": "MLOAD"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1581": {
      "op": "JUMPDEST"
    },
    "1582": {
      "op": "DUP2"
    },
    "1583": {
      "op": "DUP2"
    },
    "1584": {
      "op": "LT"
    },
    "1585": {
      "op": "ISZERO"
    },
    "1586": {
      "op": "PUSH2",
      "value": "0x647"
    },
    "1589": {
      "op": "JUMPI"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1592": {
      "op": "DUP2"
    },
    "1593": {
      "op": "DUP7"
    },
    "1594": {
      "op": "ADD"
    },
    "1595": {
      "op": "DUP2"
    },
    "1596": {
      "op": "ADD"
    },
    "1597": {
      "op": "MLOAD"
    },
    "1598": {
      "op": "DUP6"
    },
    "1599": {
      "op": "DUP4"
    },
    "1600": {
      "op": "ADD"
    },
    "1601": {
      "op": "MSTORE"
    },
    "1602": {
      "op": "ADD"
    },
    "1603": {
      "op": "PUSH2",
      "value": "0x62D"
    },
    "1606": {
      "op": "JUMP"
    },
    "1607": {
      "op": "JUMPDEST"
    },
    "1608": {
      "op": "DUP2"
    },
    "1609": {
      "op": "DUP2"
    },
    "1610": {
      "op": "GT"
    },
    "1611": {
      "op": "ISZERO"
    },
    "1612": {
      "op": "PUSH2",
      "value": "0x656"
    },
    "1615": {
      "op": "JUMPI"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1618": {
      "op": "DUP3"
    },
    "1619": {
      "op": "DUP6"
    },
    "1620": {
      "op": "ADD"
    },
    "1621": {
      "op": "MSTORE"
    },
    "1622": {
      "op": "JUMPDEST"
    },
    "1623": {
      "op": "POP"
    },
    "1624": {
      "op": "SWAP2"
    },
    "1625": {
      "op": "SWAP1"
    },
    "1626": {
      "op": "SWAP2"
    },
    "1627": {
      "op": "ADD"
    },
    "1628": {
      "op": "SWAP3"
    },
    "1629": {
      "op": "SWAP2"
    },
    "1630": {
      "op": "POP"
    },
    "1631": {
      "op": "POP"
    },
    "1632": {
      "jump": "o",
      "op": "JUMP"
    },
    "1633": {
      "op": "JUMPDEST"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1638": {
      "op": "DUP3"
    },
    "1639": {
      "op": "DUP5"
    },
    "1640": {
      "op": "SUB"
    },
    "1641": {
      "op": "SLT"
    },
    "1642": {
      "op": "ISZERO"
    },
    "1643": {
      "op": "PUSH2",
      "value": "0x673"
    },
    "1646": {
      "op": "JUMPI"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1649": {
      "op": "DUP1"
    },
    "1650": {
      "op": "REVERT"
    },
    "1651": {
      "op": "JUMPDEST"
    },
    "1652": {
      "op": "POP"
    },
    "1653": {
      "op": "MLOAD"
    },
    "1654": {
      "op": "SWAP2"
    },
    "1655": {
      "op": "SWAP1"
    },
    "1656": {
      "op": "POP"
    },
    "1657": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "78768b49e07e216af395d1310f1d93fd0bb8ac91",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity =0.8.9;\n\nimport \"../interfaces/ILiquidationBot.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol\";\n\n\ncontract LiquidationBot is ILiquidationBot, Ownable {\n    address private marginEngineAddress;\n\n    constructor(address _marginEngineAddress) {\n        require(_marginEngineAddress != address(0), \"margin engine address has to be set\");\n        marginEngineAddress = _marginEngineAddress;\n    }\n\n    function liquidatePosition(\n        address _owner,\n        int24 _tickLower,\n        int24 _tickUpper\n    ) external onlyOwner returns (uint256) {\n        require(marginEngineAddress != address(0), \"margin engine address has to be set\");\n        // make a call to marginEngine.liquidatePosition(_owner, _tickLower, _tickUpper);\n        (bool success, bytes memory returnData) = marginEngineAddress.call(abi.encodeWithSignature(\"liquidatePosition(address,int24,int24)\", _owner, _tickLower, _tickUpper));\n        \n        require(success, \"call marginEngine.liquidatePosition(_owner, _tickLower, _tickUpper) failed\");\n        (uint liquidationReward) = abi.decode(returnData, (uint));\n\n        return liquidationReward;\n    }\n\n    function getPositionMarginRequirement(\n        address _owner,\n        int24 _tickLower,\n        int24 _tickUpper\n    ) external returns (uint256){\n        require(marginEngineAddress != address(0), \"margin engine address has to be set\");\n        // make a call to marginEngine.liquidatePosition(_owner, _tickLower, _tickUpper);\n        (bool success, bytes memory returnData) = marginEngineAddress.call(abi.encodeWithSignature(\"getPositionMarginRequirement(address,int24,int24,bool)\", _owner, _tickLower, _tickUpper, true)); // make static call and catch the error\n        \n        require(success, \"call marginEngine.getPositionMarginRequirement(_owner, _tickLower, _tickUpper, _isLM) failed\");\n        (uint marginRequirement) = abi.decode(returnData, (uint256));\n\n        return marginRequirement;\n    }\n\n}",
  "sourceMap": "185:1839:2:-:0;;;285:193;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:1;921:18:0;:32::i;:::-;-1:-1:-1;;;;;345:34:2;;337:82;;;;-1:-1:-1;;;337:82:2;;511:2:4;337:82:2;;;493:21:4;550:2;530:18;;;523:30;589:34;569:18;;;562:62;-1:-1:-1;;;640:18:4;;;633:33;683:19;;337:82:2;;;;;;;;429:19;:42;;-1:-1:-1;;;;;;429:42:2;-1:-1:-1;;;;;429:42:2;;;;;;;;;;185:1839;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:290:4:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:4;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:4:o;309:399::-;185:1839:2;;;;;;",
  "sourcePath": "contracts/LiquidationBot.sol",
  "type": "contract"
}